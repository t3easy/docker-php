name: Build and push Docker images

on:
  schedule:
  - cron: "42 4 * * 1"
  push:
    branches: [main]

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        include:
        - php: "8.0"
          php-ext-dir: /usr/local/lib/php/extensions/no-debug-non-zts-20200930
          alpine: "3.14"
        - php: "7.4"
          php-ext-dir: /usr/local/lib/php/extensions/no-debug-non-zts-20190902
          alpine: "3.14"
        - php: "7.3"
          php-ext-dir: /usr/local/lib/php/extensions/no-debug-non-zts-20180731
          alpine: "3.14"
        - php: "7.2"
          php-ext-dir: /usr/local/lib/php/extensions/no-debug-non-zts-20170718
          alpine: "3.12"

    env:
      LATEST_PHP: "7.4"
      IMAGE_NAME: t3easy/php
      PLATFORMS: linux/amd64,linux/arm64

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push latest image
      uses: docker/build-push-action@v2
      if: ${{ matrix.php == env.LATEST_PHP }}
      with:
        push: true
        platforms: ${{ env.PLATFORMS }}
        build-args: |
          PHP_VERSION=${{ matrix.php }}
          PHP_EXT_DIR=${{ matrix.php-ext-dir }}
          TARGET_ENVIRONMENT=production
        tags: |
          ${{ env.IMAGE_NAME }}
          ghcr.io/${{ env.IMAGE_NAME }}
          ${{ env.IMAGE_NAME }}:${{ matrix.php }}
          ${{ env.IMAGE_NAME }}:${{ matrix.php }}-production
          ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.php }}
          ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.php }}-production
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
        cache-from: type=local,src=/tmp/.buildx-cache

    - name: Build and push production images
      uses: docker/build-push-action@v2
      if: ${{ matrix.php != env.LATEST_PHP }}
      with:
        push: true
        platforms: ${{ env.PLATFORMS }}
        build-args: |
          ALPINE_VERSION=${{ matrix.alpine }}
          PHP_VERSION=${{ matrix.php }}
          PHP_EXT_DIR=${{ matrix.php-ext-dir }}
          TARGET_ENVIRONMENT=production
        tags: |
          ${{ env.IMAGE_NAME }}:${{ matrix.php }}
          ${{ env.IMAGE_NAME }}:${{ matrix.php }}-production
          ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.php }}
          ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.php }}-production
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
        cache-from: type=local,src=/tmp/.buildx-cache

    - name: Build and push development images
      uses: docker/build-push-action@v2
      with:
        push: true
        platforms: ${{ env.PLATFORMS }}
        build-args: |
          ALPINE_VERSION=${{ matrix.alpine }}
          PHP_VERSION=${{ matrix.php }}
          PHP_EXT_DIR=${{ matrix.php-ext-dir }}
          TARGET_ENVIRONMENT=development
        tags: |
          ${{ env.IMAGE_NAME }}:${{ matrix.php }}-development
          ghcr.io/${{ env.IMAGE_NAME }}:${{ matrix.php }}-development
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
        cache-from: type=local,src=/tmp/.buildx-cache
